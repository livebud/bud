package generator

{{- if $.Imports }}

import (
	{{- range $import := $.Imports }}
	{{$import.Name}} "{{$import.Path}}"
	{{- end }}
)
{{- end }}

// Generators is a list of generators
type Generators struct {
	{{- range $generator := $.Generators }}
	{{ $generator.Pascal }} *{{ $generator.Import.Name }}.Generator
	{{- end }}
}

// Register the generators
func Register(genfs *overlay.FileSystem, generators *Generators) *FileSystem {
	{{- range $generator := $.Generators }}
	genfs.DirGenerator("bud/internal/{{ $generator.Path }}", generators.{{ $generator.Pascal }})
	{{- end }}
	return genfs
}

// Filesystem is simply an overlay.FileSystem. We alias overlay.FileSystem to
// ensure Register is called as part of loading the required dependencies.
type FileSystem = overlay.FileSystem
